imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }


parameters:
    locale: ru


framework:
    translator: { fallbacks: ['%locale%'] }
    secret: '%secret%'
    router:
        resource: '%kernel.project_dir%/app/config/routing.yml'
        strict_requirements: ~
    form: ~
    csrf_protection: ~
    validation: { enable_annotations: true }
    default_locale: '%locale%'
    trusted_hosts: ~
    session:
        handler_id: session.handler.native_file
        save_path: '/tmp'
    fragments: ~
    http_method_override: true
    assets:
        json_manifest_path: '%kernel.project_dir%/web/build/manifest.json'
    php_errors:
        log: true


twig:
    debug: '%kernel.debug%'
    strict_variables: '%kernel.debug%'
    form_theme: 'form/fields.html.twig'
    globals:
        sitename: '%sitename%'


doctrine:
    dbal:
        driver: pdo_pgsql
        host: '%database_host%'
        port: '%database_port%'
        dbname: '%database_name%'
        user: '%database_user%'
        password: '%database_password%'
        charset: UTF8
    orm:
        auto_generate_proxy_classes: '%kernel.debug%'
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true


sensio_framework_extra:
    request:
        converters: true


sonata_block:
    blocks:
        sonata.admin.block.admin_list:
            contexts: [admin]


fos_rest:
    routing_loader:
        default_format: json
    format_listener:
        rules:
            - { path: '^/api', priorities: ['json'], fallback_format: json, prefer_extension: false }
            - { path: '^/', stop: true }
    param_fetcher_listener: force
    body_listener: false
    view:
        view_response_listener:
            enabled: true
            force: false
        formats:
            json: true
        mime_types:
            json: ['application/json']


jms_serializer:
    property_naming:
        id: 'jms_serializer.identical_property_naming_strategy'


nelmio_api_doc:
    models:
        names:
            - { alias: TrainersItem, type: AppBundle\Entity\Trainer, groups: [trainer_list] }
    areas:
        path_patterns:
            - ^/api/users
            - ^/api/trains
            - ^/api/trainers
    documentation:
        host: localhost
        schemes: [http]
        consumes: [application/json]
        produces: [application/json]
        info:
            title: Gymm API
            description: API for gymm training app.
            version: 1.0.0
        securityDefinitions:
            Bearer:
                type: apiKey
                description: 'Value: Bearer {jwt}'
                name: Authorization
                in: header
        security: []


swiftmailer:
    transport: '%mailer_transport%'
    host: '%mailer_host%'
    username: '%mailer_user%'
    password: '%mailer_password%'
    spool:
        type: file
        path: '%kernel.project_dir%/var/emails'


lexik_jwt_authentication:
    private_key_path: '%kernel.project_dir%/var/jwt/private.pem'
    public_key_path: '%kernel.project_dir%/var/jwt/public.pem'
    pass_phrase: '%jwt_key_pass_phrase%'
    token_ttl: 86400


vich_uploader:
    db_driver: orm
    mappings:
        avatar:
            uri_prefix: /media/avatar
            upload_destination: '%kernel.project_dir%/web/media/avatar'
            namer: Vich\UploaderBundle\Naming\UniqidNamer
            directory_namer:
                service: Vich\UploaderBundle\Naming\SubdirDirectoryNamer
                options: {chars_per_dir: 1, dirs: 2}


liip_imagine:
    resolvers:
        default:
            web_path: ~
    filter_sets:
        cache: ~
        avatar_thumb:
            quality: 75
            filters:
                thumbnail: { size: [150, 150], mode: outbound }


nelmio_cors:
    paths:
        '^/api/':
            allow_origin: ['*']
            allow_methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS']
            allow_headers: ['Authorization', 'Content-Type']
            expose_headers: ['X-Total-Count']
            max_age: 3600
        '^/auth/':
            allow_origin: ['http://localhost:8080']
            allow_credentials: true
            allow_methods: ['GET', 'POST']
            allow_headers: ['Content-Type']
